# Hibernate
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.database.generation=none
quarkus.hibernate-orm.database.charset=utf8

# Flyway
quarkus.flyway.migrate-at-start=true

# CORS
quarkus.http.cors=true
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with,x-foobar
quarkus.http.cors.methods=GET,POST,PUT

# OpenAPI
quarkus.swagger-ui.always-include=true
mp.openapi.scan.disable=true 

# TEST configuration
%test.quarkus.datasource.url=jdbc:h2:tcp://localhost/mem:test
%test.quarkus.datasource.driver=org.h2.Driver
%test.quarkus.datasource.username=username-default

# DEV configuration
%dev.quarkus.datasource.url=jdbc:postgresql://localhost:5432/postgres01
%dev.quarkus.datasource.driver=org.postgresql.Driver
%dev.quarkus.datasource.username=quarkus01
%dev.quarkus.datasource.password=quarkpass01

%dev.quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQL95Dialect

# PROD configuration Google Cloud
%prod.quarkus.datasource.url=jdbc:postgresql:///postgres001?cloudSqlInstance=quarkus-269117:us-central1:postgres001&socketFactory=com.google.cloud.sql.postgres.SocketFactory
%prod.quarkus.datasource.driver=org.postgresql.Driver
%prod.quarkus.datasource.username=quarkus001
%prod.quarkus.datasource.password=quarkpass001

# PROD configuration Heroku
# For deployment on Heroku remove the postgres-socket-factory from pom.xml
# %prod.quarkus.datasource.url=jdbc:postgresql://ec2-46-137-177-160.eu-west-1.compute.amazonaws.com:5432/degqdp78e001g1
# %prod.quarkus.datasource.driver=org.postgresql.Driver
# %prod.quarkus.datasource.username=username
# %prod.quarkus.datasource.password=password

%prod.quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQL95Dialect
%prod.quarkus.http.port=${PORT}